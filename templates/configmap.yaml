# For Kubernetes, ConfigMap is an object for storing configuration data
# This will run through the templating engine and be passed to Kubernetes
# Install templates to Kubernetes
# helm install full-coral ./mychart
# Takes a release name like full-coral and prints out all the Kubernetes resources that were uploaded to the server
# helm get manifest full-coral
# Uninstall release like
# helm uninstall full-coral
# Important: to test the template rendering but not install anything
# helm install --debug --dry-run goodly-guppy ./mychart
apiVersion: v1
kind: ConfigMap
metadata:
  # Template directive injects the release name into the template
  # dot separates each namespaced element
  # helm install clunky-serval ./mychart
  # helm get manifest clunky-serval
  name: {{ .Release.Name }}-configmap
  # Subtemplate and passing in scope for access to .Chart things
  {{- template "mychart.labels" . }}
data:
  myvalue: "Hello World"
  # From values.yml
  # helm install geared-marsupi ./mychart --dry-run --debug
  # Go templating + funcs, pipelines similar to unix
  # default good for computed values that can't go inside values.yml defaults
  drink: {{ .Values.favorite.drink | default "tea" | upper | quote }}
  food: {{ .Values.favorite.food | repeat 5 | quote }}
  {{- if eq .Values.favorite.drink "coffee" }}
  mug: "true"
  {{- end }}
  release: {{ .Release.Name }}
  toppings: |-
    {{- range .Values.pizzaToppings }}
    - {{ . | title | quote }}
    {{- end }}

